#include <ESP8266WiFi.h>
#include "Adafruit_MQTT.h"
#include "Adafruit_MQTT_Client.h"

#define WLAN_SSID       "nama wifi"
#define WLAN_PASS       "pass wifi"

#define AIO_SERVER      "io.adafruit.com"
#define AIO_SERVERPORT  1883                   // use 8883 for SSL
#define IO_USERNAME  "username_anda"
#define IO_KEY       "My_Key_anda"

WiFiClient client;
Adafruit_MQTT_Client mqtt(&client, AIO_SERVER, AIO_SERVERPORT, IO_USERNAME, IO_KEY);
Adafruit_MQTT_Publish photocell = Adafruit_MQTT_Publish(&mqtt, IO_USERNAME "/feeds/username_anda"); //username_anda
Adafruit_MQTT_Subscribe relay = Adafruit_MQTT_Subscribe(&mqtt, IO_USERNAME "/feeds/relay"); //nama_feed anda

void MQTT_connect();

#define pin_relay D4 //pin output di wemos
String Data;

void setup() {
  Serial.begin(115200);
  delay(10);

  Serial.println(F("Wemos Google Assistant"));

  // Connect to WiFi access point.
  Serial.println(); Serial.println();
  Serial.print("Connecting to ");
  Serial.println(WLAN_SSID);

  WiFi.begin(WLAN_SSID, WLAN_PASS);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println();
  Serial.println("WiFi connected");
  Serial.println("IP address: "); Serial.println(WiFi.localIP());
  mqtt.subscribe(&relay);
  pinMode (pin_relay, OUTPUT);
  digitalWrite (pin_relay, 1); 
}

uint32_t x=0;

void loop() {
  MQTT_connect();
  Adafruit_MQTT_Subscribe *subscription;
  while ((subscription = mqtt.readSubscription(5000))) {
    if (subscription == &relay) {
      Data = (char *)relay.lastread;
      Serial.println(Data);
      if (Data == "OFF"){
        digitalWrite (pin_relay, 1);
      }
      else if (Data == "ON"){
        digitalWrite(pin_relay, 0);
      }
    }
  }
}

void MQTT_connect() {
  int8_t ret;

  // Stop if already connected.
  if (mqtt.connected()) {
    return;
  }
  Serial.print("Connecting to MQTT... ");
  uint8_t retries = 3;
  while ((ret = mqtt.connect()) != 0) { // connect will return 0 for connected
       Serial.println(mqtt.connectErrorString(ret));
       Serial.println("Retrying MQTT connection in 5 seconds...");
       mqtt.disconnect();
       delay(5000);  // wait 5 seconds
       retries--;
       if (retries == 0) {
         // basically die and wait for WDT to reset me
         while (1);
       }
  }
  Serial.println("MQTT Connected!");
}
